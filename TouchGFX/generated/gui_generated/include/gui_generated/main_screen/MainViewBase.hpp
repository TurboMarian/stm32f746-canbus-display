/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888Bitmap.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundBox;
    touchgfx::CircleProgress circleProgress1;
    touchgfx::PainterRGB888Bitmap circleProgress1Painter;
    touchgfx::TextArea RpmDescriptor;
    touchgfx::TextArea KpaDescriptor;
    touchgfx::TextArea CltDecsriptor;
    touchgfx::TextArea LambdaDescriptor;
    touchgfx::TextArea TrgtDescriptor;
    touchgfx::TextAreaWithOneWildcard LambdaValue;
    touchgfx::TextAreaWithOneWildcard TrgtValue;
    touchgfx::TextAreaWithOneWildcard KpaValue;
    touchgfx::TextAreaWithOneWildcard CltValue;
    touchgfx::TextAreaWithOneWildcard RpmValue;
    touchgfx::Image backgroundImage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LAMBDAVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar LambdaValueBuffer[LAMBDAVALUE_SIZE];
    static const uint16_t TRGTVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar TrgtValueBuffer[TRGTVALUE_SIZE];
    static const uint16_t KPAVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar KpaValueBuffer[KPAVALUE_SIZE];
    static const uint16_t CLTVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar CltValueBuffer[CLTVALUE_SIZE];
    static const uint16_t RPMVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar RpmValueBuffer[RPMVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINVIEWBASE_HPP
