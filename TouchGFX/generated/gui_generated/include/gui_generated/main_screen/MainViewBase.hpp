/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundBox;
    touchgfx::TextArea RpmDescriptor;
    touchgfx::TextArea KpaDescriptor;
    touchgfx::TextArea CltDecsriptor;
    touchgfx::TextArea LambdaDescriptor;
    touchgfx::TextArea TrgtDescriptor;
    touchgfx::TextAreaWithOneWildcard LambdaValue;
    touchgfx::TextAreaWithOneWildcard TrgtValue;
    touchgfx::TextAreaWithOneWildcard KpaValue;
    touchgfx::TextAreaWithOneWildcard CltValue;
    touchgfx::TextAreaWithOneWildcard KmhValue;
    touchgfx::Image backgroundImage;
    touchgfx::TextArea rpm1;
    touchgfx::TextArea rpm2;
    touchgfx::TextArea rpm3;
    touchgfx::TextArea rpm4;
    touchgfx::TextArea rpm5;
    touchgfx::TextArea rpm6;
    touchgfx::TextArea rpm7;
    touchgfx::TextArea rpm8;
    touchgfx::TextArea rpm9;
    touchgfx::TextArea rpm10;
    touchgfx::Line line11;
    touchgfx::PainterRGB888 line11Painter;
    touchgfx::TextArea IATDescriptor;
    touchgfx::TextArea ECTDescriptor;
    touchgfx::TextAreaWithOneWildcard IATValue;
    touchgfx::TextAreaWithOneWildcard EGTValue;
    touchgfx::TextArea IATDescriptor_1;
    touchgfx::TextArea ECTDescriptor_1;
    touchgfx::TextAreaWithOneWildcard OILTempValue;
    touchgfx::TextAreaWithOneWildcard OILPressureValue;
    touchgfx::TextArea IATDescriptor_1_1;
    touchgfx::BoxProgress TPSProgress;
    touchgfx::Line line10;
    touchgfx::PainterRGB888 line10Painter;
    touchgfx::Line line10_1;
    touchgfx::PainterRGB888 line10_1Painter;
    touchgfx::TextAreaWithOneWildcard BatteryVoltage;
    touchgfx::ImageProgress RPMProgressBar;
    touchgfx::TextAreaWithOneWildcard RPMValue;
    touchgfx::TextArea CltValue_1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LAMBDAVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar LambdaValueBuffer[LAMBDAVALUE_SIZE];
    static const uint16_t TRGTVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar TrgtValueBuffer[TRGTVALUE_SIZE];
    static const uint16_t KPAVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar KpaValueBuffer[KPAVALUE_SIZE];
    static const uint16_t CLTVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar CltValueBuffer[CLTVALUE_SIZE];
    static const uint16_t KMHVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar KmhValueBuffer[KMHVALUE_SIZE];
    static const uint16_t IATVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar IATValueBuffer[IATVALUE_SIZE];
    static const uint16_t EGTVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar EGTValueBuffer[EGTVALUE_SIZE];
    static const uint16_t OILTEMPVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar OILTempValueBuffer[OILTEMPVALUE_SIZE];
    static const uint16_t OILPRESSUREVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar OILPressureValueBuffer[OILPRESSUREVALUE_SIZE];
    static const uint16_t BATTERYVOLTAGE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar BatteryVoltageBuffer[BATTERYVOLTAGE_SIZE];
    static const uint16_t RPMVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar RPMValueBuffer[RPMVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINVIEWBASE_HPP
